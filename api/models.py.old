import uuid

from django.core.validators import MinLengthValidator
from django.db import models
from phonenumber_field.modelfields import PhoneNumberField

# Create your models here.
'''
Categoria
Sub-categoria
Produto
Usuários
Pedido
Carrinho
Estoque

'''

class Categoria(models.Model):
    ESCOLHAS_CATEGORIA= (
    ('M', 'Masculino'),
    ('F', 'Feminino'),    
    )
    
    id = models.UUIDField( primary_key=True, default=uuid.uuid4, editable=False)
    tipo = models.CharField(max_length=1, choices=  ESCOLHAS_CATEGORIA,blank=False, null=False)
     
    class Meta:
        ordering= ['id']
    
    def __str__(self) -> str:
        return self.tipo


class Sub_Categoria(models.Model):
    ESCOLHAS_SUB_CATEGORIA= (
    ('A', 'Adulto'),
    ('I', 'Infantil'),    
    ('P','Plus_Size'),
    )
    
    id = models.UUIDField( primary_key=True, default=uuid.uuid4, editable=False)
    tipo = models.CharField(max_length=1, choices=  ESCOLHAS_SUB_CATEGORIA, blank=False, null=False)
     
    class Meta:
        ordering= ['id']
    
    def __str__(self) -> str:
        return self.tipo
    
    
class Tipos(models.Model):    
    ESCOLHAS_TIPO= (
    ('cam','Camisetas'),
    ('blu','Blusas'),
    ('sho','Shorts'),
    ('cal','Calça'),
    ('int','Roupa_Intima'),
    
    )
    id = models.UUIDField( primary_key=True, default=uuid.uuid4, editable=False)
    nome = models.CharField(max_length=3, choices=  ESCOLHAS_TIPO,blank=False, null=False)
       
     
    class Meta:
        ordering= ['id']
    
    def __str__(self) -> str:
        return self.nome


class Produto(models.Model):
      id = models.UUIDField( primary_key=True, default=uuid.uuid4, editable=False)
      nome =models.CharField(max_length=100,blank=False, null=False)
      categoria=models.ForeignKey('Categoria', on_delete=models.CASCADE,blank=False, null=False)
      tipo=models.ForeignKey('Tipos',on_delete=models.CASCADE,blank=False, null=False)
      s_categoria=models.ForeignKey('Sub_Categoria',on_delete=models.CASCADE,blank=False, null=False)
      qtd_em_estoque =models.PositiveIntegerField( blank=False, null=False)
      preco =models.DecimalField(max_digits = 10, decimal_places= 2,blank=False, null=False )
      cor =models.CharField(max_length=50, blank=False, null=False)
      tamanho=models.PositiveIntegerField(blank=False, null=False)
      imagem = models.ImageField()
      class Meta:
          ordering=['id'] 
      def __str__(self) -> str:
          return f'{self.nome }-{self.s_categoria}-{self.cor}'
      
      
class Usuarios(models.Model):
    TIPO_USER=(
        ('C',"Cliente"),
        ('A',"Admin"),
    )
    ESTADOS=(
        ('AC', ' Acre	'),
        ('AL',	'Alagoas	'),
        ('AP',	'Amapá	'),
        ('AM',	'Amazonas	'),
        ('BA',	'Bahia	'),
        ('CE',	'Ceara	'),
        ('DF',	'Distrito_Federal	'),
        ('ES',	'Espírito_Santo	'),
        ('GO',	'Goiás	'),
        ('MA',	'Maranhão	'),
        ('MT',	'Mato_Grosso'),
        ('MS',	'Mato_Grosso_do_Sul'),
        ('MG',	'Minas_Gerais'),
        ('PA',	'Pará	'),
        ('PB',	'Paraíba	 '),
        ('PR',	'Paraná	'),
        ('PE',	'Pernambuco	'),
        ('PI',	'Piauí	'),
        ('RJ',	'Rio_de_Janeiro	  '),
        ('RN',	'Rio_Grande_do_Norte	'),
        ('RS',	'Rio_Grande_do_Sul'),
        ('RO',	'Rondônia	'),
        ('RR',	'Roraima'),
        ('SC',	'Santa_Catarina	'),
        ('SP',	'São_Paulo	'),
        ('SE',	'Sergipe	'),
        ('TO',	'Tocantins'),
        
    )
    id = models.UUIDField( primary_key=True, default=uuid.uuid4, editable=False)
    primeiro_nome =models.CharField(max_length=50,blank=False, null=False, default=' ')
    sobrenome =models.CharField(max_length=50,blank=False, null=False, default=' ')
    login_nick_name=models.CharField(max_length=15, blank=False, null=False, unique=True, default=' ')
    password = models.CharField( max_length=26,validators=[MinLengthValidator(8)], null=False,blank=False, default='12345678' )
    tipo = models.CharField(max_length=1, choices=TIPO_USER, blank=False, null=False, default='C')
    email = models.EmailField(max_length=254, unique=True, blank=False, null=False, default=' ')
    uf = models.CharField(max_length=2, choices=ESTADOS, blank=True, null=True )
    cidade = models.CharField(max_length=50, blank=True, null=True)
    bairro = models.CharField(max_length=150, blank=True, null=True)
    logradouro = models.CharField(max_length=250, blank=True, null=True)
    complemento = models.CharField(max_length=250, blank=True, null=True)    
    numero = models.PositiveIntegerField(blank=True, null=True)
    tel_celular = PhoneNumberField(unique=True, blank=True, null=True)
    tel_fixo = PhoneNumberField(blank=True, null=True)
    
    
class Pedido(models.Model):
    id = models.UUIDField( primary_key=True, default=uuid.uuid4, editable=False)
    id_cliente = models.ForeignKey('Usuarios', on_delete=CASCADE, null=False , blank=False)
    
    

    
    
class Carrinho(models.Model):
    pass
class Estoque(models.Model):
    pass
